<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gJAAQgIIq/g/G2iw8koSf/kAAAAASUVORK5CYII=
</value>
  </data>
</root>